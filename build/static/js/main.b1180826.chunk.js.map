{"version":3,"sources":["utils/ColumnHeaderLabel.js","store/SummaryStore.js","utils/Comparators.js","store/TableStore.js","components/header/Header.js","components/summary/SummaryValues.js","components/summary/Summary.js","components/table/TableHeader.js","components/table/TableRow.js","components/table/Table.js","components/wrapper/Wrapper.js","App.js","store/store.js","index.js"],"names":["labelMap","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","Country","initialState","items","label","Labels","value","SummaryStore","createSlice","name","reducers","updateSummary","state","actions","globalValues","payload","key","undefined","push","console","log","SummaryActions","Comparators","compareCountryDescending","a","b","compareCountryAscending","compareNewConfirmedAscending","compareNewConfirmedDescending","compareTotalConfirmedAscending","compareTotalConfirmedDescending","compareNewDeathsAscending","compareNewDeathsDescending","compareTotalDeathsAscending","compareTotalDeathsDescending","compareNewRecoveredAscending","compareNewRecoveredDescending","compareTotalRecoveredAscending","compareTotalRecoveredDescending","TableStore","ID","CountryCode","Slug","Date","updateTableStore","sortTableAscending","sort","sortTableDescending","TableActions","Header","useState","toTimeString","lastRefreshedDate","setDate","dispatch","useDispatch","className","onClick","fetch","method","then","data","json","Global","Countries","catch","err","SummaryValues","props","Summary","summaryArray","useSelector","summary","map","item","TableHeader","sortAscending","evt","field","currentTarget","getAttribute","sortDescending","TableRow","commonProps","country","Table","TableArray","table","Wrapper","useEffect","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1180826.chunk.js","sourcesContent":["const labelMap = {\n    NewConfirmed : \"New Confirmed\",\n    TotalConfirmed : \"Total Confirmed\",\n    NewDeaths : \"New Deaths\",\n    TotalDeaths : \"Total Deaths\",\n    NewRecovered : \"New Recovered\",\n    TotalRecovered : \"Total Recovered\",\n    Country : \"Country Name\"\n}\n\nexport default labelMap;","import { createSlice } from '@reduxjs/toolkit';\nimport Labels from '../utils/ColumnHeaderLabel';\n\nconst initialState = {\n    items : [\n        {\n            label : Labels.NewConfirmed,\n            value : 0\n        },\n        {\n            label : Labels.NewDeaths,\n            value : 0\n        },\n        {\n            label : Labels.NewRecovered,\n            value : 0\n        },\n        {\n            label : Labels.TotalConfirmed,\n            value : 0\n        },\n        {\n            label : Labels.TotalDeaths,\n            value : 0\n        },\n        {\n            label : Labels.TotalRecovered,\n            value : 0\n        }\n    ]\n}\n\n\nconst SummaryStore = createSlice({\n    name : 'summarySlice',\n    initialState,\n    reducers : {\n        updateSummary(state,actions){\n            let globalValues = actions.payload;\n            let items = []\n            for(let key in Labels){\n                if(globalValues[key] === undefined){\n                    continue;\n                }\n                items.push({\n                    label : Labels[key],\n                    value : globalValues[key]\n                })\n            }\n            state.items = items;\n\n            console.log(\"Summary updates should be done here\");\n        }\n    }\n})\n\nexport const SummaryActions = SummaryStore.actions;\nexport default SummaryStore;\n\n","function Comparators () {\n    function compareCountryDescending( a, b) {\n\n        if ( a.Country > b.Country ){\n            return -1;\n        }\n        if ( a.Country < b.Country ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareCountryAscending( a, b ) {\n        if ( a.Country < b.Country ){\n            return -1;\n        }\n        if ( a.Country > b.Country ){\n            return 1;\n        }\n        return 0;\n    }\n\n    function compareNewConfirmedAscending( a, b ) {\n        if ( a.NewConfirmed < b.NewConfirmed ){\n            return -1;\n        }\n        if ( a.NewConfirmed > b.NewConfirmed ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareNewConfirmedDescending( a, b ) {\n        if ( a.NewConfirmed > b.NewConfirmed ){\n            return -1;\n        }\n        if ( a.NewConfirmed < b.NewConfirmed ){\n            return 1;\n        }\n        return 0;\n    }\n\n    function compareTotalConfirmedAscending( a, b ) {\n        if ( a.TotalConfirmed < b.TotalConfirmed ){\n            return -1;\n        }\n        if ( a.NewConfirmed > b.NewConfirmed ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareTotalConfirmedDescending( a, b ) {\n        if ( a.TotalConfirmed > b.TotalConfirmed ){\n            return -1;\n        }\n        if ( a.TotalConfirmed < b.TotalConfirmed ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareNewDeathsAscending( a, b ) {\n        if ( a.NewDeaths < b.NewDeaths ){\n            return -1;\n        }\n        if ( a.NewDeaths > b.NewDeaths ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareNewDeathsDescending( a, b ) {\n        if ( a.NewDeaths > b.NewDeaths ){\n            return -1;\n        }\n        if ( a.NewDeaths < b.NewDeaths ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareTotalDeathsAscending( a, b ) {\n        if ( a.TotalDeaths < b.TotalDeaths ){\n            return -1;\n        }\n        if ( a.TotalDeaths > b.TotalDeaths ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareTotalDeathsDescending( a, b ) {\n        if ( a.TotalDeaths > b.TotalDeaths ){\n            return -1;\n        }\n        if ( a.TotalDeaths < b.TotalDeaths ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareNewRecoveredAscending( a, b ) {\n        if ( a.NewRecovered < b.NewRecovered ){\n            return -1;\n        }\n        if ( a.NewRecovered > b.NewRecovered ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareNewRecoveredDescending( a, b ) {\n        if ( a.NewRecovered > b.NewRecovered ){\n            return -1;\n        }\n        if ( a.NewRecovered < b.NewRecovered ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareTotalRecoveredAscending( a, b ) {\n        if ( a.TotalRecovered < b.TotalRecovered ){\n            return -1;\n        }\n        if ( a.TotalRecovered > b.TotalRecovered ){\n            return 1;\n        }\n        return 0;\n    }\n    function compareTotalRecoveredDescending( a, b ) {\n        if ( a.TotalRecovered > b.TotalRecovered ){\n            return -1;\n        }\n        if ( a.TotalRecovered < b.TotalRecovered ){\n            return 1;\n        }\n        return 0;\n    }\n\n    return {\n        compareCountryDescending :compareCountryDescending,\n        compareCountryAscending : compareCountryAscending,\n        compareNewConfirmedAscending : compareNewConfirmedAscending,\n        compareNewConfirmedDescending : compareNewConfirmedDescending,\n        compareTotalConfirmedAscending : compareTotalConfirmedAscending,\n        compareTotalConfirmedDescending : compareTotalConfirmedDescending,\n        compareNewDeathsAscending : compareNewDeathsAscending,\n        compareNewDeathsDescending : compareNewDeathsDescending,\n        compareTotalDeathsAscending : compareTotalDeathsAscending,\n        compareTotalDeathsDescending : compareTotalDeathsDescending,\n        compareNewRecoveredAscending : compareNewRecoveredAscending,\n        compareNewRecoveredDescending : compareNewRecoveredDescending,\n        compareTotalRecoveredAscending : compareTotalRecoveredAscending,\n        compareTotalRecoveredDescending : compareTotalRecoveredDescending\n    }\n}\nexport default Comparators();","import { createSlice } from '@reduxjs/toolkit';\n\nimport Comparators from \"../utils/Comparators\";\n\nconst initialState = {\n    items : [\n        {\n            ID: \"0\",\n            Country: \"\",\n            CountryCode: \"\",\n            Slug: \"\",\n            NewConfirmed: 0,\n            TotalConfirmed: 0,\n            NewDeaths: 0,\n            TotalDeaths: 0,\n            NewRecovered: 0,\n            TotalRecovered: 0,\n            Date: \"\",\n        }\n    ]\n};\n\nconst TableStore = createSlice({\n    name: 'summarySlice',\n    initialState,\n    reducers: {\n        updateTableStore(state,actions){\n            state.items = actions.payload;\n            //console.log(\"Table array : \" + JSON.stringify(state.items));\n        },\n        sortTableAscending(state,actions){\n            console.log(\"sortTableAscending is called!!\" + actions.payload);\n            switch (actions.payload) {\n                case \"Country\":\n                    state.items.sort(Comparators.compareCountryAscending);\n                    break;\n                case \"NewConfirmed\":\n                    state.items.sort(Comparators.compareNewConfirmedAscending);\n                    break;\n                case \"TotalConfirmed\":\n                    state.items.sort(Comparators.compareTotalConfirmedAscending);\n                    break;\n                case \"NewDeaths\":\n                    state.items.sort(Comparators.compareNewDeathsAscending);\n                    break;\n                case \"TotalDeaths\":\n                    state.items.sort(Comparators.compareTotalDeathsAscending);\n                    break;\n                case \"NewRecovered\":\n                    state.items.sort(Comparators.compareNewRecoveredAscending);\n                    break;\n                case \"TotalRecovered\":\n                    state.items.sort(Comparators.compareTotalRecoveredAscending);\n                    break;\n                default :\n                    break;\n            }\n\n        },\n        sortTableDescending(state,actions){\n            console.log(\"sortTableDescending is called!!\"+ actions.payload);\n            switch (actions.payload) {\n                case \"Country\":\n                    state.items.sort(Comparators.compareCountryDescending);\n                    break;\n                case \"NewConfirmed\":\n                    state.items.sort(Comparators.compareNewConfirmedDescending);\n                    break;\n                case \"TotalConfirmed\":\n                    state.items.sort(Comparators.compareTotalConfirmedDescending);\n                    break;\n                case \"NewDeaths\":\n                    state.items.sort(Comparators.compareNewDeathsDescending);\n                    break;\n                case \"TotalDeaths\":\n                    state.items.sort(Comparators.compareTotalDeathsDescending);\n                    break;\n                case \"NewRecovered\":\n                    state.items.sort(Comparators.compareNewRecoveredDescending);\n                    break;\n                case \"TotalRecovered\":\n                    state.items.sort(Comparators.compareTotalRecoveredDescending);\n                    break;\n                default :\n                    break;\n            }\n        }\n    }\n})\n\n\nexport const TableActions = TableStore.actions;\nexport default TableStore;\n\n\n","import './Header.css';\nimport React, { useState } from 'react';\nimport { SummaryActions } from '../../store/SummaryStore';\nimport { TableActions } from '../../store/TableStore';\nimport { useDispatch } from  'react-redux';\n\n\nfunction Header() {\n    const [lastRefreshedDate, setDate] = useState(new Date().toTimeString());\n    const dispatch = useDispatch();\n    const refreshButtonHandler = ()=>{\n        fetch(\"https://api.covid19api.com/summary\", {method : 'GET'}).then(data => data.json()).then((data)=>{\n            console.log(data);\n            dispatch(SummaryActions.updateSummary(data.Global));\n            dispatch(TableActions.updateTableStore(data.Countries));\n            setDate(new Date().toTimeString());\n        }).catch((err)=>{\n            console.log(\"Error while fetching data\");\n        })\n\n    }\n    return (\n        <header className=\"header\">\n            <div className=\"logoDiv\">\n                <p className=\"logoText\">Covid Tracker</p>\n            </div>\n            <div className=\"refreshedDiv\">\n                <button className=\"refreshButton\" onClick={refreshButtonHandler}>Refresh</button>\n                <p>Last Refreshed : {lastRefreshedDate}</p>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","function SummaryValues(props) {\n    return (\n        <div className=\"eachSummarySection\">\n            <p className=\"summarySectionLabel\">{props.label}</p>\n            <p className=\"summarySectionValue\">{props.value}</p>\n\n            <p className=\"summarySectionValueLoading\"></p>\n        </div>\n    )\n}\n\nexport default SummaryValues;","import  { useSelector } from \"react-redux\";\n\nimport SummaryValues from \"./SummaryValues\";\nimport './Summary.css';\nfunction Summary() {\n    const summaryArray = useSelector(state =>  {\n        //console.log(state.summary.items);\n        return state.summary.items\n    });\n\n    return (\n        <div className=\"summaryDiv\">\n            <div className=\"summaryHeaderDiv\"><p className=\"summaryHeaderText\">Global Summary</p> </div>\n                {summaryArray.map((item)=> (\n                    <SummaryValues key={item.label} label={item.label} value={item.value}/>\n                ))}\n        </div>\n    )\n}\n\nexport default Summary;","\nimport Labels from '../../utils/ColumnHeaderLabel'\nimport { useDispatch } from  'react-redux';\nimport {TableActions} from \"../../store/TableStore\";\n\nfunction TableHeader() {\n    const dispatch = useDispatch();\n\n    const sortAscending = (evt) => {\n        console.log(\"Ascending is called\");\n        let field = evt.currentTarget.getAttribute('data-field');\n        dispatch(TableActions.sortTableAscending(field));\n    }\n    const sortDescending = (evt) => {\n        console.log(\"sortDescending is called\");\n        let field = evt.currentTarget.getAttribute('data-field');\n        dispatch(TableActions.sortTableDescending(field));\n    }\n    return (\n        <thead className=\"tableHeaderDiv\">\n            <tr>\n              <th> {Labels[\"Country\"]} <div className=\"iconsWrapper\"> <span data-field=\"Country\" className=\"sortAscending\" onClick={sortAscending}>  </span> <span className=\"sortDescending\" data-field=\"Country\" onClick={sortDescending}>  </span> </div> </th>\n              <th> {Labels[\"NewConfirmed\"]} <div className=\"iconsWrapper\"> <span data-field=\"NewConfirmed\" className=\"sortAscending\" onClick={sortAscending}>  </span> <span data-field=\"NewConfirmed\" className=\"sortDescending\" onClick={sortDescending}>  </span> </div> </th>\n              <th> {Labels[\"TotalConfirmed\"]} <div className=\"iconsWrapper\"> <span data-field=\"TotalConfirmed\" className=\"sortAscending\" onClick={sortAscending}>  </span> <span data-field=\"TotalConfirmed\" className=\"sortDescending\" onClick={sortDescending}>  </span> </div> </th>\n              <th> {Labels[\"NewDeaths\"]} <div className=\"iconsWrapper\"> <span data-field=\"NewDeaths\" className=\"sortAscending\" onClick={sortAscending}>  </span> <span data-field=\"NewDeaths\" className=\"sortDescending\" onClick={sortDescending}>  </span> </div> </th>\n              <th> {Labels[\"TotalDeaths\"]} <div className=\"iconsWrapper\"> <span data-field=\"TotalDeaths\" className=\"sortAscending\" onClick={sortAscending}>  </span> <span data-field=\"TotalDeaths\" className=\"sortDescending\" onClick={sortDescending}>  </span> </div> </th>\n              <th> {Labels[\"NewRecovered\"]} <div className=\"iconsWrapper\"> <span data-field=\"NewRecovered\" className=\"sortAscending\" onClick={sortAscending}>  </span> <span data-field=\"NewRecovered\" className=\"sortDescending\" onClick={sortDescending}>  </span> </div> </th>\n              <th> {Labels[\"TotalRecovered\"]} <div className=\"iconsWrapper\"> <span data-field=\"TotalRecovered\" className=\"sortAscending\" onClick={sortAscending}>  </span> <span data-field=\"TotalRecovered\" className=\"sortDescending\" onClick={sortDescending}>  </span> </div> </th>\n            </tr>\n        </thead>\n    )\n}\nexport default TableHeader;","import React from 'react';\n\nfunction TableRow(props) {\n    //console.log(\"Props : \" + JSON.stringify(props));\n    return (\n        <tbody>\n            {\n                props.commonProps.map((country)=>{\n                    return (\n                        <tr key={country.ID}>\n                            <td>{country.Country}</td>\n                            <td>{country.NewConfirmed}</td>\n                            <td>{country.TotalConfirmed}</td>\n                            <td>{country.NewDeaths}</td>\n                            <td>{country.TotalDeaths}</td>\n                            <td>{country.NewRecovered}</td>\n                            <td>{country.TotalRecovered}</td>\n                        </tr>\n                    )\n                })\n            }\n        </tbody>\n\n    )\n}\n\nexport default TableRow;","import  { useSelector } from \"react-redux\";\nimport TableHeader from \"./TableHeader\";\nimport TableRow from \"./TableRow\";\nimport './Table.css';\n\nfunction Table() {\n    const TableArray = useSelector(state =>  {\n        //console.log(state.summary.items);\n        return state.table.items;\n    });\n\n    return (\n        <div className=\"TableWrapper\">\n            <table className=\"trackingTable\">\n                <TableHeader></TableHeader>\n                <TableRow commonProps={TableArray}></TableRow>\n            </table>\n\n        </div>\n    )\n}\n\nexport default Table;","import { useEffect } from 'react';\nimport { useDispatch } from  'react-redux';\nimport Summary from \"../summary/Summary\";\nimport Table from \"../table/Table\";\nimport './Wrapper.css';\nimport { SummaryActions } from '../../store/SummaryStore';\nimport { TableActions } from '../../store/TableStore';\nfunction Wrapper() {\n\n    const dispatch = useDispatch();\n    useEffect(()=>{\n\n        fetch(\"https://api.covid19api.com/summary\", {method : 'GET'}).then(data => data.json()).then((data)=>{\n            console.log(data);\n            dispatch(SummaryActions.updateSummary(data.Global));\n            dispatch(TableActions.updateTableStore(data.Countries));\n        }).catch((err)=>{\n\n            console.log(\"Error while fetching data\");\n        })\n    },[])\n    return (\n        <div className=\"wrapper\">\n            <Summary></Summary>\n            <Table></Table>\n        </div>\n    )\n}\n\nexport default Wrapper;","/*import logo from './logo.svg';*/\nimport './App.css';\nimport Header from './components/header/Header'\nimport Wrapper from \"./components/wrapper/Wrapper\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header></Header>\n      <Wrapper/>\n    </div>\n  );\n}\n\nexport default App;\n","import  { configureStore } from '@reduxjs/toolkit';\n\nimport SummaryStore from \"./SummaryStore\";\nimport TableStore from \"./TableStore\";\n\nconst store = configureStore({\n    reducer :{\n        summary: SummaryStore.reducer,\n        table : TableStore.reducer\n    }\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport store from \"./store/store\";\nimport {Provider} from 'react-redux';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}